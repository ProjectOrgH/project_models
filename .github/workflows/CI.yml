name: CI Pipeline
on:
  push:
    branches:
      - ajayy_gradio
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: fraud_detection_fastapi           # set this to your Amazon ECR repository name
  ECS_SERVICE: grp3_fraud_detection                 # set this to your Amazon ECS service name
  ECS_CLUSTER: grp3_cluster                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: grp3-fargate-1.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: fraud_detection_app           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  train:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements/requirements.txt ]; then pip install -r requirements/requirements.txt; fi
    - name: Train and save pipeline
      run: python fraud_detection_model/train_pipeline.py
    - uses: actions/upload-artifact@v2
      with:
        name: my-trained-pipeline
        path: fraud_detection_model/trained_models/*.pkl

  test:
    needs: train
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/download-artifact@v2
      with:
        name: my-trained-pipeline
    - run: mv *.pkl fraud_detection_model/trained_models/
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f test_requirements.txt ]; then pip install -r test_requirements.txt; fi
        if [ -f requirements/test_requirements.txt ]; then pip install -r requirements/test_requirements.txt; fi
    - name: Test with pytest
      run: |
        if pytest --collect-only; then
          pytest
        else
          echo "No tests to run."
        fi

  build:
    needs: [train, test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/download-artifact@v2
      with:
        name: my-trained-pipeline
    - run: mv *.pkl fraud_detection_model/trained_models/
    - name: Install dependencies
      run: |
        pip install --upgrade build
        python -m pip install --upgrade pip
        python -m pip install build setuptools wheel
    - name: Build package
      run: python -m build 
    - uses: actions/upload-artifact@v2
      with:
        name: my-build-package
        path: dist/*.whl

  
